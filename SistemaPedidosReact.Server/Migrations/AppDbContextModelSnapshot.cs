// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaPedidosReact.Server.Data;

#nullable disable

namespace SistemaPedidosReact.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.BillingInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderDetailId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BillingInformations");
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ExternalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxQty")
                        .HasColumnType("int");

                    b.Property<int>("MinQty")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortingPosition")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.Charges", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ServiceFee")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("Shipping")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.ToTable("Charges");
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DocumentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.DeliveryDiscount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("TotalPercentageDiscount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("TotalValueDiscount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.ToTable("DeliveryDiscounts");
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.DeliveryInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompleteAdress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Neighborhood")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DeliveryInformations");
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("AmmountByPartners")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("AmmountBySystem")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("DiscountProductUnitValue")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("DiscountProductUnits")
                        .HasColumnType("int");

                    b.Property<bool>("IncludesToppings")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MaxValue")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("OrderDetailId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PercentageByPartners")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("PercentageBySystem")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("RawValue")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Sku")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Value")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("OrderDetailId");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("Combo")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxLimit")
                        .HasColumnType("int");

                    b.Property<int?>("MenuId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentItemId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SortingPosition")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("MenuId");

                    b.HasIndex("ParentItemId");

                    b.HasIndex("StoreId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.Mesa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Mesas");
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Delay")
                        .HasColumnType("int");

                    b.Property<int?>("OrderStateId")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OrderStateId");

                    b.HasIndex("StoreId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BillingInformationId")
                        .HasColumnType("int");

                    b.Property<string>("CantidadCubiertos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeliveryDiscountId")
                        .HasColumnType("int");

                    b.Property<int?>("DeliveryInformationId")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryOperationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MesaId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentMethodId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Tip")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("TotalsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillingInformationId");

                    b.HasIndex("DeliveryDiscountId");

                    b.HasIndex("DeliveryInformationId");

                    b.HasIndex("MesaId");

                    b.HasIndex("OrderId");

                    b.HasIndex("PaymentMethodId");

                    b.HasIndex("TotalsId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int?>("MaxLimit")
                        .HasColumnType("int");

                    b.Property<int>("OrderDetailId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SortingPosition")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("OrderDetailId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.OrderState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OrderStates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "RECIBIDO"
                        },
                        new
                        {
                            Id = 2,
                            Name = "ACEPTADO"
                        },
                        new
                        {
                            Id = 3,
                            Name = "RECHAZADO"
                        },
                        new
                        {
                            Id = 4,
                            Name = "LISTO"
                        },
                        new
                        {
                            Id = 5,
                            Name = "ENVIADO"
                        });
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.OrderSubItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int?>("MaxLimit")
                        .HasColumnType("int");

                    b.Property<int>("OrderItemId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SortingPosition")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("OrderItemId");

                    b.ToTable("OrderSubItems");
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.OtherTotals", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Tip")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.ToTable("OtherTotals");
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.Parameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Parameters");
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PaymentMethods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "EF",
                            Name = "Efectivo"
                        },
                        new
                        {
                            Id = 2,
                            Code = "TC",
                            Name = "Tarjeta Crédito"
                        },
                        new
                        {
                            Id = 3,
                            Code = "TD",
                            Name = "Tarjeta Débito"
                        },
                        new
                        {
                            Id = 4,
                            Code = "ON",
                            Name = "Pago Online"
                        },
                        new
                        {
                            Id = 5,
                            Code = "MP",
                            Name = "MercadoPago"
                        },
                        new
                        {
                            Id = 6,
                            Code = "MO",
                            Name = "Modo"
                        },
                        new
                        {
                            Id = 7,
                            Code = "PN",
                            Name = "Pago Nube"
                        });
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InternalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExternalId = "1",
                            InternalId = "1",
                            Name = "El Refugio"
                        });
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.Totals", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ChargesId")
                        .HasColumnType("int");

                    b.Property<int?>("OtherTotalsId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalDiscounts")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("TotalOrder")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("TotalProducts")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalToPay")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("ChargesId");

                    b.HasIndex("OtherTotalsId");

                    b.ToTable("Totals");
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 9, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "maximiliano_hermosilla@hotmail.com",
                            Enabled = true,
                            LastName = "Sistemas",
                            Name = "Administrador",
                            Password = "CLAve123**",
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.Discount", b =>
                {
                    b.HasOne("SistemaPedidosReact.Server.Models.Item", "Item")
                        .WithMany("Discounts")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SistemaPedidosReact.Server.Models.OrderDetail", "OrderDetail")
                        .WithMany("Discounts")
                        .HasForeignKey("OrderDetailId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Item");

                    b.Navigation("OrderDetail");
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.Item", b =>
                {
                    b.HasOne("SistemaPedidosReact.Server.Models.Category", "Category")
                        .WithMany("Items")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SistemaPedidosReact.Server.Models.Menu", "Menu")
                        .WithMany("Items")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SistemaPedidosReact.Server.Models.Item", "ParentItem")
                        .WithMany("Children")
                        .HasForeignKey("ParentItemId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SistemaPedidosReact.Server.Models.Store", "Store")
                        .WithMany("Items")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Category");

                    b.Navigation("Menu");

                    b.Navigation("ParentItem");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.Menu", b =>
                {
                    b.HasOne("SistemaPedidosReact.Server.Models.Store", "Store")
                        .WithMany("Menus")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Store");
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.Order", b =>
                {
                    b.HasOne("SistemaPedidosReact.Server.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("SistemaPedidosReact.Server.Models.OrderState", "OrderState")
                        .WithMany("Orders")
                        .HasForeignKey("OrderStateId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("SistemaPedidosReact.Server.Models.Store", "Store")
                        .WithMany("Orders")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("OrderState");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.OrderDetail", b =>
                {
                    b.HasOne("SistemaPedidosReact.Server.Models.BillingInformation", "BillingInformation")
                        .WithMany("OrderDetails")
                        .HasForeignKey("BillingInformationId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("SistemaPedidosReact.Server.Models.DeliveryDiscount", "DeliveryDiscount")
                        .WithMany("OrderDetails")
                        .HasForeignKey("DeliveryDiscountId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("SistemaPedidosReact.Server.Models.DeliveryInformation", "DeliveryInformation")
                        .WithMany("OrderDetails")
                        .HasForeignKey("DeliveryInformationId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("SistemaPedidosReact.Server.Models.Mesa", "Mesa")
                        .WithMany("OrderDetails")
                        .HasForeignKey("MesaId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("SistemaPedidosReact.Server.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SistemaPedidosReact.Server.Models.PaymentMethod", "PaymentMethod")
                        .WithMany("OrderDetails")
                        .HasForeignKey("PaymentMethodId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("SistemaPedidosReact.Server.Models.Totals", "Totals")
                        .WithMany("OrderDetails")
                        .HasForeignKey("TotalsId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("BillingInformation");

                    b.Navigation("DeliveryDiscount");

                    b.Navigation("DeliveryInformation");

                    b.Navigation("Mesa");

                    b.Navigation("Order");

                    b.Navigation("PaymentMethod");

                    b.Navigation("Totals");
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.OrderItem", b =>
                {
                    b.HasOne("SistemaPedidosReact.Server.Models.Item", "Item")
                        .WithMany("OrderItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SistemaPedidosReact.Server.Models.OrderDetail", "OrderDetail")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderDetailId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("OrderDetail");
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.OrderSubItem", b =>
                {
                    b.HasOne("SistemaPedidosReact.Server.Models.Item", "Item")
                        .WithMany("OrderSubItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SistemaPedidosReact.Server.Models.OrderItem", "OrderItem")
                        .WithMany("OrderSubItems")
                        .HasForeignKey("OrderItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("OrderItem");
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.Totals", b =>
                {
                    b.HasOne("SistemaPedidosReact.Server.Models.Charges", "Charges")
                        .WithMany("Totals")
                        .HasForeignKey("ChargesId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("SistemaPedidosReact.Server.Models.OtherTotals", "OtherTotals")
                        .WithMany("Totals")
                        .HasForeignKey("OtherTotalsId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Charges");

                    b.Navigation("OtherTotals");
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.BillingInformation", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.Category", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.Charges", b =>
                {
                    b.Navigation("Totals");
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.DeliveryDiscount", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.DeliveryInformation", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.Item", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Discounts");

                    b.Navigation("OrderItems");

                    b.Navigation("OrderSubItems");
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.Menu", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.Mesa", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.OrderDetail", b =>
                {
                    b.Navigation("Discounts");

                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.OrderItem", b =>
                {
                    b.Navigation("OrderSubItems");
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.OrderState", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.OtherTotals", b =>
                {
                    b.Navigation("Totals");
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.PaymentMethod", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.Store", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("Menus");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("SistemaPedidosReact.Server.Models.Totals", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
